#add at tail DLL
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        self.prev = None


def printLeftToRightManner(head):
    #print("Left to Right")
    curr = head
    while curr != None:
        print(curr.data, end=" ")
        curr = curr.next
    print()


def printRightToLeftManner(head):
    #print("Right to Left")
    tail = head
    while tail.next != None:
        tail = tail.next

    curr = tail
    while curr != None:
        print(curr.data, end=" ")
        curr = curr.prev
    print()


def addNodeAtTailOfLinkedList(head, val):
    newBlock = Node(val)
    if head == None:
        return newBlock

    tail = head
    while tail.next != None:
        tail = tail.next

    tail.next = newBlock

    newBlock.prev = tail
    return head


n=int(input())
l=list(map(int,input().split()))

#newBlock=int(input())
head = None
for ele in l:
    head = addNodeAtTailOfLinkedList(head, ele)
    #head = addNodeAtHeadOfLinkedList(head, ele)
    # head = insertAtSpecificPosition(head12222, 3)

printLeftToRightManner(head)
printRightToLeftManner(head)
ele=int(input())
head = addNodeAtTailOfLinkedList(head, ele)
printLeftToRightManner(head)
printRightToLeftManner(head)
